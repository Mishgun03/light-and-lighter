services:
  db:
    image: postgres:16-alpine
    container_name: darkerdb_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: darkerdb_backend
    depends_on:
      - db
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    command: ["/app/entrypoint.sh"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: darkerdb_frontend
    env_file:
      - .env
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

  db_test:
    image: postgres:16-alpine
    container_name: darkerdb_postgres_test
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  backend_tests:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: darkerdb_backend_test
    depends_on:
      - db_test
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    command: ["/app/run_tests.sh"]

volumes:
  postgres_data:
